define("gmaps-polygon-manager/dot",["exports","module"],function(e,t){"use strict";function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=function(){function e(t,r){var a=void 0===arguments[2]?{}:arguments[2];n(this,e),this.latLng=t,this.markerObj=new google.maps.Marker({position:this.latLng,map:r}),this.events=new Array,this.callbackContext=a.callbackContext||this,this.callbacks={dot_clicked:a.onDotClicked},this._addListeners()}return r(e,[{key:"getLatLng",value:function(){return this.latLng}},{key:"getMarketObj",value:function(){return this.markerObj}},{key:"remove",value:function(){this.markerObj.setMap(null),this._removeListeners()}},{key:"on",value:function(e,t){this.callbacks[e]=t}},{key:"_trigger",value:function(){if(0==arguments.length)return!0;var e=new Array;Array.prototype.push.apply(e,arguments);var t=e.shift();return null!==this.callbacks[t]&&void 0!==this.callbacks[t]?this.callbacks[t].apply(this.callbackContext,e):!0}},{key:"_addListeners",value:function(){var e=this;this.events.push(google.maps.event.addListener(this.markerObj,"click",function(){e._trigger("dot_clicked",e)}))}},{key:"_removeListeners",value:function(){this.events.forEach(function(e){google.maps.event.removeListener(e)}),this.events=new Array}}]),e}();t.exports=a});
define("gmaps-polygon-manager",["exports","module","gmaps-polygon-manager/pen","gmaps-polygon-manager/polygon"],function(e,o,t,n){"use strict";function l(e){return e&&e.__esModule?e:{"default":e}}function s(e,o){if(!(e instanceof o))throw new TypeError("Cannot call a class as a function")}var i=function(){function e(e,o){for(var t=0;t<o.length;t++){var n=o[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(o,t,n){return t&&e(o.prototype,t),n&&e(o,n),o}}(),a=l(t),r=l(n),c=function(){function e(o){var t=this,n=void 0===arguments[1]?{}:arguments[1];if(s(this,e),null===o||void 0===o)throw"You must pass a google map object as the first argument";this.map=o,this.polygons=new Array,this.selectedPolygons=new Array,this.events=new Array,this.drawColor=n.drawColor||"#000",this.newPolygonColor=n.newPolygonColor,this.selectMultiple=n.selectMultiple||!1,null!==n.editable&&void 0!==n.editable?this.editable=n.editable:this.editable=!0,this.callbackContext=n.callbackContext||this,this.callbacks={ready:n.onReady,start_draw:n.onStartDraw,finish_draw:n.onFinishDraw,cancel_draw:n.onCancelDraw,dot_added:n.onDotAdded,before_add_polygon:n.beforeAddPolygon,polygon_added:n.onPolygonAdded,polygon_changed:n.onPolygonChanged,polygon_clicked:n.onPolygonClicked,polygon_selected:n.onPolygonSelected,polygon_deselected:n.onPolygonDeselected,polygon_removed:n.onPolygonRemoved},null!==n.polygons&&void 0!==n.polygons&&this.addPolygons(n.polygons),this.editable||this.polygons.forEach(function(e){e.setEditable(!1)}),this.events.push(google.maps.event.addDomListener(this.map,"click",function(e){(null===t.pen||void 0===t.pen)&&t.deselectAll()})),this._trigger("ready",this)}return i(e,[{key:"enableDraw",value:function(){var e=void 0===arguments[0]?null:arguments[0];void 0===arguments[1]?null:arguments[1];this.editable&&(this.deselectAll(),this.pen=new a["default"](this.map,{color:e||this.drawColor,callbackContext:this,onStartDraw:this.callbacks.start_draw,onFinishDraw:this._finishDraw,onCancelDraw:this._cancelDraw,onDotAdded:this.callbacks.dot_added}),this.map.setOptions({draggableCursor:"pointer"}))}},{key:"setPolygons",value:function(e){this.reset(),this.addPolygons(e)}},{key:"addPolygon",value:function(e){var o=void 0===arguments[1]?!0:arguments[1],t=e instanceof r["default"]?e:this._objectToPolygon(e);return this._trigger("before_add_polygon",t)?(t.setMap(this.map),t.callbackContext=this,t.on("polygon_changed",this.callbacks.polygon_changed),t.on("polygon_clicked",this._polygonClicked),t.on("polygon_selected",this.callbacks.polygon_selected),t.on("polygon_deselected",this.callbacks.polygon_deselected),t.on("polygon_removed",this.callbacks.polygon_removed),this.polygons.push(t),o&&this._trigger("polygon_added",t),t):void 0}},{key:"addPolygons",value:function(e){var o=this,t=void 0===arguments[1]?!0:arguments[1];e.forEach(function(e){o.addPolygon(e,t)})}},{key:"getPolygonById",value:function(e){this.polygons.forEach(function(o){return o.id===e?o:void 0})}},{key:"getSelectedPolygon",value:function(){return this.selectedPolygons[0]}},{key:"getSelectedPolygons",value:function(){return this.selectedPolygons}},{key:"deselectPolygon",value:function(e){e.deselect(),this._removeFromArray(this.selectedPolygons,e)}},{key:"deselectPolygons",value:function(e){var o=this,t=e.slice(0);t.forEach(function(e){o.deselectPolygon(e)})}},{key:"deselectAll",value:function(){this.deselectPolygons(this.selectedPolygons)}},{key:"selectPolygon",value:function(e){var o=void 0===arguments[1]?!0:arguments[1];return this.editable?(o&&this.deselectAll(),e.select(),this.selectedPolygons.push(e),e):e}},{key:"selectPolygons",value:function(e){var o=this;if(this.selectMultiple)return this.deselectAll(),e.forEach(function(e){o.selectPolygon(e)}),e}},{key:"removePolygon",value:function(e){this.deselectPolygon(e),e.remove(),this._removeFromArray(this.polygons,e)}},{key:"removePolygons",value:function(e){var o=this,t=e.slice(0);t.forEach(function(e){o.removePolygon(e)})}},{key:"reset",value:function(){this.polygons.forEach(function(e){null!==e&&void 0!==e&&e.remove()}),this.polygons=new Array,this._resetCursor()}},{key:"destroy",value:function(){this.reset(),this.events.forEach(function(e){google.maps.event.removeListener(e)})}},{key:"on",value:function(e,o){this.callbacks[e]=o}},{key:"_trigger",value:function(){if(0==arguments.length)return!0;var e=new Array;Array.prototype.push.apply(e,arguments);var o=e.shift();return null!==this.callbacks[o]&&void 0!==this.callbacks[o]?this.callbacks[o].apply(this.callbackContext,e):!0}},{key:"_removeFromArray",value:function(e,o){var t=e.indexOf(o),n=new Array;return-1!=t&&(n=e.splice(t,1)),n[0]}},{key:"_cancelDraw",value:function(e){null!==this.pen&&void 0!==this.pen&&(this.pen.remove(),this.pen=null)}},{key:"_finishDraw",value:function(e){this._resetCursor();var o=new r["default"](this.pen.listOfDots,{color:this.newPolygonColor});this.addPolygon(o),this.selectPolygon(o),this.pen.remove(),this.pen=null}},{key:"_polygonClicked",value:function(e,o,t){if(e.isEditable()||t)this._trigger("polygon_clicked",this,o.latLng,t);else{var n=this.selectMultiple&&(o.eb.metaKey||o.eb.shiftKey||o.eb.ctrlKey);this.selectPolygon(e,!n)}}},{key:"_mapClicked",value:function(e){null!==this.pen&&void 0!==this.pen&&this.pen.draw(e.latLng)}},{key:"_resetCursor",value:function(){this.map.setOptions({draggableCursor:"url(http://maps.gstatic.com/mapfiles/openhand_8_8.cur) 8 8, default "})}},{key:"_objectToPolygon",value:function(e){return new r["default"](e.coords,{id:e.id,color:e.color})}}]),e}();o.exports=c});
define("gmaps-polygon-manager/line",["exports","module"],function(t,o){"use strict";function e(t,o){if(!(t instanceof o))throw new TypeError("Cannot call a class as a function")}var n=function(){function t(t,o){for(var e=0;e<o.length;e++){var n=o[e];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(o,e,n){return e&&t(o.prototype,e),n&&t(o,n),o}}(),i=function(){function t(o,n,i){var r=this;e(this,t),this.listOfDots=o,this.map=n,this.color=i,this.coords=new Array,this.listOfDots.length>1&&(this.listOfDots.forEach(function(t){r.coords.push(t.getLatLng())}),this.polylineObj=new google.maps.Polyline({path:this.coords,strokeColor:this.color,strokeOpacity:1,strokeWeight:2,map:this.map}))}return n(t,[{key:"setColor",value:function(t){this.color=t,this.polylineObj.setOptions({strokeColor:this.color})}},{key:"remove",value:function(){this.polylineObj.setMap(null)}}]),t}();o.exports=i});
define("gmaps-polygon-manager/pen",["exports","module","gmaps-polygon-manager/dot","gmaps-polygon-manager/line"],function(t,e,i,n){"use strict";function s(t){return t&&t.__esModule?t:{"default":t}}function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var a=function(){function t(t,e){for(var i=0;i<e.length;i++){var n=e[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,i,n){return i&&t(e.prototype,i),n&&t(e,n),e}}(),o=s(i),l=s(n),h=function(){function t(e){var i=void 0===arguments[1]?{}:arguments[1];r(this,t),this.map=e,this.callbackContext=i.callbackContext||this,this.color=i.color||"#000",this.listOfDots=new Array,this.isDrawing=!1,this.callbacks={start_draw:i.onStartDraw,finish_draw:i.onFinishDraw,cancel_draw:i.onCancelDraw,dot_added:i.onDotAdded},this._addListeners()}return a(t,[{key:"draw",value:function(t){if(this.isDrawing=!0,null!==this.currentDot&&void 0!==this.currentDot&&this.listOfDots.length>1&&this.currentDot.latLng==this.listOfDots[0].latLng)this._trigger("finish_draw",this),this.clear(),this.isDrawing=!1;else{null!==this.polyline&&void 0!==this.polyline&&this.polyline.remove();var e=new o["default"](t,this.map,{callbackContext:this,onDotClicked:this._dotClicked});if(this.listOfDots.push(e),1==this.listOfDots.length&&this._trigger("start_draw",this),this.listOfDots.length>1){this.polyline=new l["default"](this.listOfDots,this.map,this.color)}this._trigger("dot_added",e)}}},{key:"getListOfDots",value:function(){this.listOfDots}},{key:"clear",value:function(){this.listOfDots.forEach(function(t){t.remove()}),this.listOfDots=new Array,null!==this.polyline&&void 0!==this.polyline&&(this.polyline.remove(),this.polyline=null)}},{key:"remove",value:function(){this.clear(),this._removeListeners(),this.events=new Array}},{key:"on",value:function(t,e){this.callbacks[t]=e}},{key:"_trigger",value:function(){if(0==arguments.length)return!0;var t=new Array;Array.prototype.push.apply(t,arguments);var e=t.shift();return null!==this.callbacks[e]&&void 0!==this.callbacks[e]?this.callbacks[e].apply(this.callbackContext,t):!0}},{key:"_setCurrentDot",value:function(t){this.currentDot=t}},{key:"_dotClicked",value:function(t){this._setCurrentDot(t),this.draw(t.getMarketObj().getPosition())}},{key:"_addListeners",value:function(){var t=this;this.events=new Array,this.events.push(google.maps.event.addDomListener(this.map,"click",function(e){t.draw(e.latLng)})),this.events.push(google.maps.event.addDomListener(this.map,"keyup",function(e){var i=e.keyCode?e.keyCode:e.which;switch(i){case 27:t._trigger("cancel_draw")}}))}},{key:"_removeListeners",value:function(){this.events.forEach(function(t){google.maps.event.removeListener(t)})}}]),t}();e.exports=h});
define("gmaps-polygon-manager/polygon",["exports","module","gmaps-polygon-manager/dot"],function(e,t,n){"use strict";function o(e){return e&&e.__esModule?e:{"default":e}}function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var s=function(){function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,n,o){return n&&e(t.prototype,n),o&&e(t,o),t}}(),a=o(n),l=function(){function e(t){var n=this,o=void 0===arguments[1]?{}:arguments[1];i(this,e),this.coords=new Array,this.events=new Array,this.listOfDots=t,this.map=o.map,this.id=o.id,this.isDragging=!1,this.callbackContext=o.callbackContext||this,this.callbacks={polygon_changed:o.onPolygonChanged,polygon_clicked:o.onPolygonClicked,polygon_selected:o.onPolygonSelected,polygon_deselected:o.onPolygonDeselected,polygon_removed:o.onPolygonRemoved};var s=o.color||"#f00";this.listOfDots.forEach(function(e){n.addDot(e)}),this.polygonObj=new google.maps.Polygon({draggable:!0,editable:o.editable||!1,paths:this.coords,strokeOpacity:o.strokeOpacity||.8,strokeWeight:o.strokeWeight||2,fillOpacity:o.fillOpacity||.35,fillColor:s,strokeColor:s,map:this.map}),this._addListeners()}return s(e,[{key:"getData",value:function(){var e=new Array,t=this.getPlots();return t.getAt(0).forEach(function(t){e.push({lat:t.A,lng:t.F})}),e}},{key:"getPolygonObj",value:function(){return this.polygonObj}},{key:"getListOfDots",value:function(){return this.listOfDots}},{key:"getPlots",value:function(){return this.polygonObj.getPaths()}},{key:"isEditable",value:function(){return this.polygonObj.editable}},{key:"setColor",value:function(){var e=void 0===arguments[0]?"#f00":arguments[0];this.polygonObj.setOptions({fillColor:e,strokeColor:e})}},{key:"setEditable",value:function(e){this.polygonObj.setOptions({editable:e,draggable:e})}},{key:"setMap",value:function(e){this.map=e,this.polygonObj.setMap(this.map)}},{key:"addDot",value:function(e){var t=e instanceof a["default"]?e.latLng:e;this.coords.push(t)}},{key:"select",value:function(){this.setEditable(!0),this._trigger("polygon_selected",this)}},{key:"deselect",value:function(){this.setEditable(!1),this._trigger("polygon_deselected",this)}},{key:"remove",value:function(){this.polygonObj.setMap(null),this._removeListeners(),this._trigger("polygon_removed",this)}},{key:"on",value:function(e,t){this.callbacks[e]=t}},{key:"_trigger",value:function(){if(0==arguments.length)return!0;var e=[];Array.prototype.push.apply(e,arguments);var t=e.shift();return null!==this.callbacks[t]&&void 0!==this.callbacks[t]?this.callbacks[t].apply(this.callbackContext,e):!0}},{key:"_addListeners",value:function(){var e=this,t=this.polygonObj.getPath();this.events.push(google.maps.event.addListener(t,"insert_at",function(t){e.isDragging||e._trigger("polygon_changed",e,"insert")})),this.events.push(google.maps.event.addListener(t,"set_at",function(t){e.isDragging||e._trigger("polygon_changed",e,"move")})),this.events.push(google.maps.event.addListener(t,"remove_at",function(t){e.isDragging||e._trigger("polygon_changed",e,"remove")})),this.events.push(google.maps.event.addListener(this.polygonObj,"dragstart",function(t){e.isDragging=!0})),this.events.push(google.maps.event.addListener(this.polygonObj,"dragend",function(t){e.isDragging=!1,e._trigger("polygon_changed",e,"drag")})),this.events.push(google.maps.event.addDomListener(this.polygonObj,"click",function(t){e.isDragging||e._trigger("polygon_clicked",e,t,!1)})),this.events.push(google.maps.event.addDomListener(this.polygonObj,"rightclick",function(n){null!==n.vertex&&void 0!==n.vertex?2==t.length?e.remove():t.removeAt(n.vertex):e._trigger("polygon_clicked",e,n,!0)}))}},{key:"_removeListeners",value:function(){this.events.forEach(function(e){google.maps.event.removeListener(e)}),this.events=new Array}}]),e}();t.exports=l});